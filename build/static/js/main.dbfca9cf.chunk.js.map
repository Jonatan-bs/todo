{"version":3,"sources":["icons/x.svg","components/TopMenu/arrow.svg","icons/clock.svg","icons/checked.svg","logo.svg","components/Login/Login.js","components/Register/Register.js","components/Todo/Editor/Editor.js","components/TopMenu/TopMenu.js","components/handler.js","components/Todo/Todo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","login","state","email","password","setValue","e","target","name","value","setState","inputs","document","querySelector","querySelectorAll","input","reportValidity","checkValidity","fetch","method","headers","body","JSON","stringify","then","res","json","auth","props","updateState","firstname","user","todos","todo","message","setTimeout","catch","err","console","log","Fragment","className","id","this","htmlFor","type","onChange","onClick","to","Component","Register","lastname","register","code","required","TodoEditor","title","description","priority","deadlineDate","deadlineTime","componentDidMount","activeTodo","dateObj","Date","d","getDate","slice","m","getMonth","y","getFullYear","getValue","val","setValPrio","Number","updateTodo","todoID","_id","success","setTodos","todoPop","deleteTodo","addTodo","checked","action","TopMenu","logout","setAuth","render","src","require","alt","length","array","field","sort","a","b","getTime","date","Todos","map","index","key","changePrefix","handler","updatedAt","dropEvent","done","readOnly","doneEvent","Todo","active","dropped","currentTarget","componentDidUpdate","prevProps","filter","x","show","classList","contains","App","MainPage","bind","setName","obj","newTodos","exact","path","Login","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.dbfca9cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.2a219365.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.1f3dec2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.25f243db.svg\";","module.exports = __webpack_public_path__ + \"static/media/checked.67b30304.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.12433552.svg\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass login extends Component {\n  state = { email: \"\", password: \"\" };\n\n  setValue = (e) => {\n    const state = this.state;\n    const name = e.target.name;\n    state[name] = e.target.value;\n    this.setState(state);\n  };\n\n  login = () => {\n    let popup = document.querySelector(\".popup\");\n    let inputs = popup.querySelectorAll(\"input\");\n    for (const input of inputs) {\n      input.reportValidity();\n      if (!input.checkValidity()) return;\n    }\n\n    fetch(\"http://localhost:3000/user/login\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.auth) {\n          this.props.updateState({\n            auth: true,\n            firstname: res.user.firstname,\n            todos: res.user.todo,\n          });\n        } else {\n          this.setState({ message: \"wrong username or password\" });\n          setTimeout(() => {\n            this.setState({ message: \"\" });\n          }, 2000);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"overlay2\"></div>\n\n        <div id=\"login\" className=\"popup\">\n          <div className={this.state.message ? \"message active\" : \"message\"}>\n            Wrong username or password\n          </div>\n\n          <h2>Login</h2>\n          <div className=\"field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              onChange={this.setValue}\n              value={this.state.email}\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              onChange={this.setValue}\n              value={this.state.password}\n            />\n          </div>\n          <button onClick={this.login}>Log in</button>\n          <Link to=\"/register\">\n            <p className=\"secondButton\">Register</p>\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default login;\n","import React, { Component } from \"react\";\nimport \"./Register.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends Component {\n  state = { email: \"\", password: \"\", firstname: \"\", lastname: \"\", message: \"\" };\n\n  setValue = (e) => {\n    const state = this.state;\n    const name = e.target.name;\n    state[name] = e.target.value;\n    this.setState(state);\n  };\n\n  register = () => {\n    let popup = document.querySelector(\".popup\");\n    let inputs = popup.querySelectorAll(\"input\");\n    for (const input of inputs) {\n      input.reportValidity();\n      if (!input.checkValidity()) return;\n    }\n    fetch(\"http://localhost:3000/user/register\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.code === 11000) {\n          this.setState({ message: \"wrong username or password\" });\n          setTimeout(() => {\n            this.setState({ message: \"\" });\n          }, 2000);\n        } else {\n          this.props.updateState({\n            auth: true,\n            todos: res.user.todo,\n          });\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"overlay2\"></div>\n        <div id=\"register\" className=\"popup\">\n          <div className={this.state.message ? \"message active\" : \"message\"}>\n            User already exist\n          </div>\n\n          <h1>Register</h1>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            onChange={this.setValue}\n            value={this.state.email}\n            required\n          />\n\n          <label htmlFor=\"firstname\">firstname</label>\n          <input\n            type=\"text\"\n            id=\"firstname\"\n            name=\"firstname\"\n            onChange={this.setValue}\n            value={this.state.firstname}\n            required\n          />\n\n          <label htmlFor=\"lastname\">lastname</label>\n          <input\n            type=\"text\"\n            id=\"lastname\"\n            name=\"lastname\"\n            onChange={this.setValue}\n            value={this.state.lastname}\n            required\n          />\n\n          <label htmlFor=\"password\">password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            onChange={this.setValue}\n            value={this.state.password}\n            required\n          />\n          <button onClick={this.register}>Register</button>\n          <Link to=\"/login\">\n            <p className=\"secondButton\">Login</p>\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport \"./Editor.css\";\n\nclass TodoEditor extends Component {\n  state = {\n    todo: {\n      title: \"\",\n      description: \"\",\n      priority: 0,\n      deadlineDate: \"\",\n      deadlineTime: \"\",\n    },\n    message: \"\",\n  };\n\n  componentDidMount = () => {\n    if (!this.props.activeTodo) return;\n\n    let { activeTodo } = this.props;\n\n    if (activeTodo.deadlineDate) {\n      let dateObj = new Date(activeTodo.deadlineDate);\n      var d = (\"0\" + dateObj.getDate()).slice(-2);\n      var m = (\"0\" + (dateObj.getMonth() + 1)).slice(-2);\n\n      var y = dateObj.getFullYear();\n      activeTodo.deadlineDate = y + \"-\" + m + \"-\" + d;\n    }\n\n    let todo = {\n      title: activeTodo.title,\n      description: activeTodo.description,\n      priority: activeTodo.priority,\n      deadlineDate: activeTodo.deadlineDate ? activeTodo.deadlineDate : \"\",\n      deadlineTime: activeTodo.deadlineTime,\n    };\n    this.setState({ todo });\n  };\n\n  getValue = (e) => {\n    const todo = { ...this.state.todo };\n    const val = e.target.value;\n    const name = e.target.name;\n    todo[name] = val;\n    this.setState({ todo });\n  };\n\n  setValPrio = (e) => {\n    const todo = { ...this.state.todo };\n    const value = e.target.value;\n    todo.priority = Number(value);\n    this.setState({ todo });\n  };\n  updateTodo = () => {\n    let popup = document.querySelector(\".popup\");\n    let inputs = popup.querySelectorAll(\"input\");\n    for (const input of inputs) {\n      input.reportValidity();\n      if (!input.checkValidity()) return;\n    }\n\n    const todo = this.state.todo;\n    const todoID = this.props.activeTodo._id;\n    fetch(\"http://localhost:3000/todo/update\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ todo, todoID }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.success) {\n          this.props.setTodos(res.todo);\n          this.props.todoPop(false)();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  deleteTodo = () => {\n    const todoID = this.props.activeTodo._id;\n    fetch(\"http://localhost:3000/todo/delete\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ todoID }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        if (res.success) {\n          this.props.setTodos(res.todo);\n          this.props.todoPop(false)();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n  addTodo = () => {\n    let popup = document.querySelector(\".popup\");\n    let inputs = popup.querySelectorAll(\"input\");\n    for (const input of inputs) {\n      input.reportValidity();\n      if (!input.checkValidity()) return;\n    }\n\n    const todo = this.state.todo;\n    fetch(\"http://localhost:3000/todo/create\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ todo }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n\n        if (res.success) {\n          this.props.setTodos(res.todo);\n          this.props.todoPop(false)();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"overlay\" onClick={this.props.todoPop(false)}></div>\n        <div id=\"createTodo\" className=\"popup\">\n          <div className=\"field\">\n            <label htmlFor=\"todoTitle\">Title</label>\n            <input\n              id=\"todoTitle\"\n              type=\"text\"\n              name=\"title\"\n              value={this.state.todo.title}\n              onChange={this.getValue}\n              required\n            />\n          </div>\n          <div className=\"field\">\n            <label htmlFor=\"todoDescription\">Description</label>\n            <textarea\n              className=\"editable\"\n              id=\"todoDescription\"\n              type=\"text\"\n              name=\"description\"\n              value={this.state.todo.description}\n              onChange={this.getValue}\n            ></textarea>\n          </div>\n          <div className=\"field \">\n            <p>Priority</p>\n            <div className=\"priority\">\n              <input\n                id=\"prio1\"\n                name=\"todoPriority\"\n                type=\"radio\"\n                value=\"0\"\n                checked={this.state.todo.priority === 0}\n                onChange={this.setValPrio}\n              />\n              <label htmlFor=\"prio1\"></label>\n\n              <input\n                id=\"prio2\"\n                name=\"todoPriority\"\n                type=\"radio\"\n                value=\"1\"\n                checked={this.state.todo.priority === 1}\n                onChange={this.setValPrio}\n              />\n              <label htmlFor=\"prio2\"></label>\n\n              <input\n                id=\"prio3\"\n                name=\"todoPriority\"\n                type=\"radio\"\n                value=\"2\"\n                checked={this.state.todo.priority === 2}\n                onChange={this.setValPrio}\n              />\n              <label htmlFor=\"prio3\"></label>\n\n              <input\n                id=\"prio4\"\n                name=\"todoPriority\"\n                type=\"radio\"\n                value=\"3\"\n                checked={this.state.todo.priority === 3}\n                onChange={this.setValPrio}\n              />\n              <label htmlFor=\"prio4\"></label>\n            </div>\n          </div>\n\n          <p>Deadline</p>\n\n          <div className=\"field dateTime\">\n            <div className=\"date\">\n              <label htmlFor=\"todoDeadLine\">Date</label>\n              <input\n                id=\"todoDeadLine\"\n                type=\"date\"\n                name=\"deadlineDate\"\n                value={this.state.todo.deadlineDate}\n                onChange={this.getValue}\n              />\n            </div>\n            <div className=\"time\">\n              <label htmlFor=\"todoDeadLineTime\">Time</label>\n              <input\n                id=\"todoDeadLine\"\n                name=\"deadlineTime\"\n                type=\"time\"\n                value={this.state.todo.deadlineTime}\n                onChange={this.getValue}\n              />\n            </div>\n          </div>\n          {this.props.action === \"create\" ? (\n            <button id=\"addTodo\" onClick={this.addTodo}>\n              Add todo\n            </button>\n          ) : null}\n          {this.props.action === \"edit\" ? (\n            <React.Fragment>\n              <button id=\"editTodo\" onClick={this.updateTodo}>\n                Update todo\n              </button>\n              <button id=\"deleteTodo\" onClick={this.deleteTodo}>\n                Delete todo\n              </button>\n            </React.Fragment>\n          ) : null}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TodoEditor;\n","import React, { Component } from \"react\";\nimport \"./TopMenu.css\";\n\nclass TopMenu extends Component {\n  state = {};\n  logout = () => {\n    fetch(\"http://localhost:3000/user/logout\", {\n      method: \"post\",\n    })\n      .then((res) => {\n        res.json();\n      })\n      .then((res) => {\n        this.props.setAuth(false);\n      })\n      .catch((err) => console.log(err));\n  };\n  render = () => {\n    return (\n      <div id=\"topMenu\">\n        <div id=\"addTodoWrap\">\n          <div id=\"addTodo\">\n            <img\n              className=\"addButton\"\n              src={require(\"./../../icons/x.svg\")}\n              alt=\"Add todo\"\n              onClick={this.props.todoPop(\"create\")}\n            ></img>\n          </div>\n          {this.props.todos.length ? null : (\n            <div id=\"addFirst\">\n              <img src={require(\"./arrow.svg\")} alt=\"Add todo\"></img>\n            </div>\n          )}\n        </div>\n        <p id=\"logout\" onClick={this.logout}>\n          Log out\n        </p>\n      </div>\n    );\n  };\n}\n\nexport default TopMenu;\n","export default {\n  sort(array, field, type = \"asc\") {\n    array.sort(function(a, b) {\n      if (field === \"updatedAt\") {\n        a[field] = new Date(a[field]);\n        a[field] = a[field].getTime();\n\n        b[field] = new Date(b[field]);\n        b[field] = b[field].getTime();\n      }\n      switch (type) {\n        case \"asc\":\n          return a[field] - b[field];\n        case \"desc\":\n          return b[field] - a[field];\n        default:\n          return array;\n      }\n    });\n  },\n\n  formatDate(date) {\n    if (!date) return \"\";\n    let dateObj = new Date(date);\n    var d = dateObj.getDate();\n    var m = dateObj.getMonth() + 1;\n    var y = dateObj.getFullYear();\n    return d + \"/\" + m + \"/\" + y;\n  }\n};\n","import React, { Component } from \"react\";\nimport \"./Todo.css\";\nimport TodoEditor from \"./Editor/Editor\";\nimport TopMenu from \"./../TopMenu/TopMenu\";\nimport handler from \"./../handler\";\n\nclass Todos extends Component {\n  render() {\n    return this.props.type.map((todo, index) => {\n      return (\n        <React.Fragment key={index}>\n          <div className=\"topElms\">\n            <p className=\"updateDate\">\n              {this.props.changePrefix +\n                \": \" +\n                handler.formatDate(todo.updatedAt)}\n            </p>\n            {this.props.changePrefix === \"Updated\" ? (\n              <p className=\"drop\" onClick={this.props.dropEvent(todo._id)}>\n                Drop\n              </p>\n            ) : null}\n            {this.props.changePrefix === \"Done\" ? (\n              <p className=\"drop\" onClick={this.props.dropEvent(todo._id)}>\n                Drop\n              </p>\n            ) : null}\n            {this.props.changePrefix === \"Dropped\" ? (\n              <p className=\"drop\" onClick={this.props.dropEvent(todo._id)}>\n                Reset\n              </p>\n            ) : null}\n          </div>\n          <li\n            key={index}\n            onClick={\n              this.props.changePrefix === \"Updated\"\n                ? this.props.todoPop(\"edit\", todo)\n                : null\n            }\n          >\n            {todo.deadlineDate || todo.deadlineTime ? (\n              <div className=\"deadline\">\n                <img\n                  src={require(\"./../../icons/clock.svg\")}\n                  alt=\"Deadline\"\n                ></img>\n\n                <p className=\"date\">{handler.formatDate(todo.deadlineDate)}</p>\n                <p className=\"time\">{todo.deadlineTime}</p>\n              </div>\n            ) : null}\n            {this.props.changePrefix !== \"Dropped\" ? (\n              <div className=\"done\">\n                <input\n                  className=\"nopop\"\n                  id=\"done\"\n                  type=\"checkbox\"\n                  checked={todo.done}\n                  readOnly\n                />\n                <label\n                  className=\"nopop\"\n                  htmlFor=\"done\"\n                  onClick={this.props.doneEvent(todo._id)}\n                >\n                  <img\n                    alt=\"checked\"\n                    className=\"nopop\"\n                    src={require(\"./../../icons/checked.svg\")}\n                    onClick={this.props.doneEvent(todo._id)}\n                  />\n                </label>\n              </div>\n            ) : null}\n\n            <span className={\"priority priority\" + todo.priority}></span>\n            <div className=\"content\">\n              <h3 className=\"title\">{todo.title}</h3>\n              <p className=\"description\">{todo.description}</p>\n            </div>\n          </li>\n        </React.Fragment>\n      );\n    });\n  }\n}\n\nclass Todo extends Component {\n  state = {\n    todoPop: false,\n    todos: [],\n    activeTodo: null,\n    active: [],\n    dropped: [],\n    done: [],\n  };\n\n  doneEvent = (todoID) => {\n    return (e) => {\n      if (e.target !== e.currentTarget) return;\n\n      fetch(\"http://localhost:3000/todo/done\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ todoID }),\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          this.props.setTodos(res.todo);\n        })\n        .catch((err) => console.log(err));\n    };\n  };\n\n  dropEvent = (todoID) => {\n    return (e) => {\n      if (e.target !== e.currentTarget) return;\n\n      fetch(\"http://localhost:3000/todo/drop\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ todoID }),\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          this.props.setTodos(res.todo);\n        })\n        .catch((err) => console.log(err));\n    };\n  };\n  componentDidMount() {\n    let { todos } = this.props;\n    let active = todos.filter((x) => x.done === false && x.dropped === false);\n    let dropped = todos.filter((x) => x.dropped);\n    let done = todos.filter((x) => x.done);\n    this.setState({ todos, done, dropped, active });\n  }\n  componentDidUpdate = (prevProps) => {\n    if (prevProps === this.props) return;\n    let { todos } = this.props;\n    let active = todos.filter((x) => x.done === false && x.dropped === false);\n    let dropped = todos.filter((x) => x.dropped);\n    let done = todos.filter((x) => x.done);\n    this.setState({ todos, done, dropped, active });\n  };\n\n  todoPop = (show, todo) => {\n    return (e) => {\n      if (e && e.target.classList.contains(\"nopop\")) return;\n      // let activeTodo = todo ? todo : null;\n      else this.setState({ todoPop: show, activeTodo: todo });\n    };\n  };\n\n  render = () => {\n    return (\n      <React.Fragment>\n        <TopMenu\n          setAuth={this.props.setAuth}\n          todoPop={this.todoPop}\n          todos={this.state.todos}\n        />\n        {this.state.todoPop ? (\n          <TodoEditor\n            todoPop={this.todoPop}\n            setTodos={this.props.setTodos}\n            action={this.state.todoPop}\n            activeTodo={this.state.activeTodo}\n          />\n        ) : null}\n\n        {/* <div id=\"addTodo\">\n          <img\n            src={require(\"./../../icons/x.svg\")}\n            alt=\"Add todo\"\n            onClick={this.todoPop(\"create\")}\n          ></img>\n        </div> */}\n\n        {this.state.todos.length > 0 ? (\n          <div id=\"todoWrap\">\n            {this.state.active.length > 0 ? (\n              <div className=\"activeTodos todoSection\">\n                <ul className=\"todoUl\">\n                  <h4 className=\"todoGroupTitle\">Active Todos</h4>\n                  <Todos\n                    type={this.state.active}\n                    todoPop={this.todoPop}\n                    doneEvent={this.doneEvent}\n                    dropEvent={this.dropEvent}\n                    changePrefix=\"Updated\"\n                  />\n                </ul>\n              </div>\n            ) : null}\n            {this.state.done.length > 0 ? (\n              <div className=\"doneTodos todoSection\">\n                <ul className=\"todoUl\">\n                  <h4 className=\"todoGroupTitle\">Done</h4>\n                  <Todos\n                    type={this.state.done}\n                    todoPop={this.todoPop}\n                    doneEvent={this.doneEvent}\n                    dropEvent={this.dropEvent}\n                    changePrefix=\"Done\"\n                  />\n                </ul>\n              </div>\n            ) : null}\n            {this.state.dropped.length > 0 ? (\n              <div className=\"droppedTodos todoSection\">\n                <ul className=\"todoUl\">\n                  <h4 className=\"todoGroupTitle\">Dropped</h4>\n                  <Todos\n                    type={this.state.dropped}\n                    todoPop={this.todoPop}\n                    doneEvent={this.doneEvent}\n                    dropEvent={this.dropEvent}\n                    changePrefix=\"Dropped\"\n                  />\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        ) : (\n          <div className=\"welcome\" onClick={this.todoPop(\"create\")}>\n            <h1>Welcome to</h1>\n\n            <img src={require(\"./../../logo.svg\")} alt=\"Deadline\"></img>\n            <p>\n              Add your first Todo, in the top left corner <br /> or click HERE{\" \"}\n            </p>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  };\n}\n\nexport default Todo;\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Login from \"./components/Login/Login\";\nimport Register from \"./components/Register/Register\";\nimport Todo from \"./components/Todo/Todo\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport handler from \"./components/handler\";\n\nclass App extends Component {\n  state = { auth: \"notset\" };\n\n  setAuth = (state) => {\n    this.setState({ auth: state, todos: [], firstname: \"\" });\n  };\n  componentDidMount() {\n    fetch(\"http://localhost:3000/user/auth\", { method: \"post\" })\n      .then((res) => res.json())\n      .then((res) => {\n        let auth = res.auth;\n        // let auth = false;\n        let firstname = \"\";\n        let todos = [];\n        if (res.user) {\n          firstname = res.user.firstname;\n          todos = res.user.todo;\n\n          handler.sort(todos, \"updatedAt\", \"desc\");\n          handler.sort(todos, \"done\", \"asc\");\n        }\n\n        this.setState({ auth, firstname, todos });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  MainPage = () => {\n    return (\n      <React.Fragment>\n        <section>\n          <Todo\n            todos={this.state.todos}\n            setTodos={this.setTodos.bind(this)}\n            setAuth={this.setAuth}\n          />\n        </section>\n      </React.Fragment>\n    );\n  };\n  setName = (firstname) => {\n    this.setState({ firstname: firstname });\n  };\n  updateState = (obj) => {\n    this.setState(obj);\n  };\n  setTodos = (newTodos) => {\n    handler.sort(newTodos, \"updatedAt\", \"desc\");\n    handler.sort(newTodos, \"done\", \"asc\");\n    this.setState({ todos: newTodos });\n  };\n\n  render() {\n    return this.state.auth === \"notset\" ? (\n      <p>Loading</p>\n    ) : (\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              this.state.auth ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <Login updateState={this.updateState.bind(this)} />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/register\"\n            render={() =>\n              this.state.auth ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <Register updateState={this.updateState.bind(this)} />\n              )\n            }\n          />\n\n          <Route\n            exact\n            render={() =>\n              this.state.auth ? <this.MainPage /> : <Redirect to=\"/login\" />\n            }\n          />\n\n          {/* <this.MainPage /> */}\n\n          <Route component={this.MainPage} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}